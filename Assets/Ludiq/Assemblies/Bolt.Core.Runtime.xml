<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Bolt.Core.Runtime</name>
    </assembly>
    <members>
        <member name="T:Bolt.IBoltAnimationEvent">
            <summary>
            Called when an animation event points to TriggerAnimationEvent.
            </summary>
        </member>
        <member name="T:Bolt.IBoltNamedAnimationEvent">
            <summary>
            Called when an animation event points to TriggerAnimationEvent.
            This version allows you to use the string parameter as the event name.
            </summary>
        </member>
        <member name="T:Bolt.IOnApplicationFocus">
            <summary>
            Called when the application gains focus.
            </summary>
        </member>
        <member name="T:Bolt.IOnApplicationLostFocus">
            <summary>
            Called when the application loses focus.
            </summary>
        </member>
        <member name="T:Bolt.IOnApplicationPause">
            <summary>
            Called when the application pauses.
            </summary>
        </member>
        <member name="T:Bolt.IOnApplicationQuit">
            <summary>
            Called when the application quits.
            </summary>
        </member>
        <member name="T:Bolt.IOnApplicationResume">
            <summary>
            Called when the application resumes.
            </summary>
        </member>
        <member name="T:Bolt.IBoltUnityEvent">
            <summary>
            Called when a UnityEvent points to TriggerUnityEvent.
            </summary>
        </member>
        <member name="T:Bolt.ICustomEvent">
            <summary>
            A special named event with any amount of parameters called manually with the 'Trigger Custom Event' unit.
            </summary>
        </member>
        <member name="T:Bolt.IOnDrawGizmos">
            <summary>
            Use to draw gizmos that are always drawn in the editor.
            </summary>
        </member>
        <member name="T:Bolt.IOnDrawGizmosSelected">
            <summary>
            Use to draw gizmos that are drawn in the editor when the object is selected.
            </summary>
        </member>
        <member name="T:Bolt.IOnButtonClick">
            <summary>
            Called when a user clicks the button and releases it.
            </summary>
        </member>
        <member name="T:Bolt.IOnDeselect">
            <summary>
            Called when the pointer deselects the GUI element.
            </summary>
        </member>
        <member name="T:Bolt.IOnDropdownValueChanged">
            <summary>
            Called when the current value of the dropdown has changed.
            </summary>
        </member>
        <member name="T:Bolt.IOnGUI">
            <summary>
            Use to draw immediate mode GUI components.
            </summary>
        </member>
        <member name="T:Bolt.IOnInputFieldEndEdit">
            <summary>
            Called when the user finishes editing the text content either by submitting or by clicking somewhere that removes the
            focus from the input field.
            </summary>
        </member>
        <member name="T:Bolt.IOnInputFieldValueChanged">
            <summary>
            Called when the text content of the input field has changed.
            </summary>
        </member>
        <member name="T:Bolt.IOnPointerClick">
            <summary>
            Called when the pointer clicks the GUI element.
            </summary>
        </member>
        <member name="T:Bolt.IOnPointerDown">
            <summary>
            Called when the pointer presses the GUI element.
            </summary>
        </member>
        <member name="T:Bolt.IOnPointerEnter">
            <summary>
            Called when the pointer enters the GUI element.
            </summary>
        </member>
        <member name="T:Bolt.IOnPointerExit">
            <summary>
            Called when the pointer exits the GUI element.
            </summary>
        </member>
        <member name="T:Bolt.IOnPointerUp">
            <summary>
            Called when the pointer releases the GUI element.
            </summary>
        </member>
        <member name="T:Bolt.IOnScrollbarValueChanged">
            <summary>
            Called when the current value of the scrollbar has changed.
            </summary>
        </member>
        <member name="T:Bolt.IOnScrollRectValueChanged">
            <summary>
            Called when the current value of the scrollbar has changed.
            </summary>
        </member>
        <member name="T:Bolt.IOnSelect">
            <summary>
            Called when the pointer selects the GUI element.
            </summary>
        </member>
        <member name="T:Bolt.IOnSliderValueChanged">
            <summary>
            Called when the current value of the slider has changed.
            </summary>
        </member>
        <member name="T:Bolt.IOnToggleValueChanged">
            <summary>
            Called when the current value of the toggle has changed.
            </summary>
        </member>
        <member name="T:Bolt.IOnTransformChildrenChanged">
            <summary>
            Called when the list of children of the transform of the game object has changed.
            </summary>
        </member>
        <member name="T:Bolt.IOnTransformParentChanged">
            <summary>
            Called when the parent property of the transform of the game object has changed.
            </summary>
        </member>
        <member name="T:Bolt.IOnButtonInput">
            <summary>
            A configurable event to handle global button input.
            </summary>
        </member>
        <member name="T:Bolt.IOnKeyboardInput">
            <summary>
            A configurable event to handle global keyboard input.
            </summary>
        </member>
        <member name="T:Bolt.IOnMouseDown">
            <summary>
            Called when the user has pressed the mouse button while over the GUI element or collider.
            </summary>
        </member>
        <member name="T:Bolt.IOnMouseDrag">
            <summary>
            Called when the user has clicked on the GUI element or collider and is still holding down the mouse.
            </summary>
        </member>
        <member name="T:Bolt.IOnMouseEnter">
            <summary>
            Called when the mouse enters the GUI element or collider.
            </summary>
        </member>
        <member name="T:Bolt.IOnMouseExit">
            <summary>
            Called when the mouse is not any longer over the GUI element or collider.
            </summary>
        </member>
        <member name="T:Bolt.IOnMouseInput">
            <summary>
            A configurable event to handle global mouse input.
            </summary>
        </member>
        <member name="T:Bolt.IOnMouseOver">
            <summary>
            Called every frame while the mouse is over the GUI element or collider.
            </summary>
        </member>
        <member name="T:Bolt.IOnMouseUp">
            <summary>
            Called when the user has released the mouse button.
            </summary>
        </member>
        <member name="T:Bolt.IOnMouseUpAsButton">
            <summary>
            Called when the mouse is released over the same GUI element or collider as it was pressed.
            </summary>
        </member>
        <member name="T:Bolt.IFixedUpdate">
            <summary>
            Called every fixed framerate frame.
            </summary>
        </member>
        <member name="T:Bolt.ILateUpdate">
            <summary>
            Called every frame after all update functions have been called.
            </summary>
        </member>
        <member name="T:Bolt.IOnDestroy">
            <summary>
            Called before the machine is destroyed.
            </summary>
        </member>
        <member name="T:Bolt.IOnDisable">
            <summary>
            Called when the machine becomes disabled or inactive.
            </summary>
        </member>
        <member name="T:Bolt.IOnEnable">
            <summary>
            Called when the machine becomes enabled and active.
            </summary>
        </member>
        <member name="T:Bolt.IStart">
            <summary>
            Called the first time a machine is enabled before any update method.
            </summary>
        </member>
        <member name="T:Bolt.IUpdate">
            <summary>
            Called every frame.
            </summary>
        </member>
        <member name="T:Bolt.IOnDestinationReached">
            <summary>
            Called when the nav mesh agent comes within a certain threshold of its destination.
            </summary>
        </member>
        <member name="T:Bolt.IOnCollisionEnter2D">
            <summary>
            Called when an incoming collider makes contact with this object's collider.
            </summary>
        </member>
        <member name="T:Bolt.IOnCollisionExit2D">
            <summary>
            Called when a collider on another object stops touching this object's collider.
            </summary>
        </member>
        <member name="T:Bolt.IOnCollisionStay2D">
            <summary>
            Called each frame where a collider on another object is touching this object's collider.
            </summary>
        </member>
        <member name="T:Bolt.IOnJointBreak2D">
            <summary>
            Called when a joint attached to the same game object broke.
            </summary>
        </member>
        <member name="T:Bolt.IOnTriggerEnter2D">
            <summary>
            Called when a collider enters the trigger.
            </summary>
        </member>
        <member name="T:Bolt.IOnTriggerExit2D">
            <summary>
            Called when a collider exits the trigger.
            </summary>
        </member>
        <member name="T:Bolt.IOnTriggerStay2D">
            <summary>
            Called once per frame for every collider that is touching the trigger.
            </summary>
        </member>
        <member name="T:Bolt.IOnCollisionEnter">
            <summary>
            Called when this collider / rigidbody has begun touching another rigidbody / collider.
            </summary>
        </member>
        <member name="T:Bolt.IOnCollisionExit">
            <summary>
            Called when this collider / rigidbody has stopped touching another rigidbody / collider.
            </summary>
        </member>
        <member name="T:Bolt.IOnCollisionStay">
            <summary>
            Called once per frame for every collider / rigidbody that is touching rigidbody / collider.
            </summary>
        </member>
        <member name="T:Bolt.IOnControllerColliderHit">
            <summary>
            Called when the controller hits a collider while performing a move.
            </summary>
        </member>
        <member name="T:Bolt.IOnJointBreak">
            <summary>
            Called when a joint attached to the same game object broke.
            </summary>
        </member>
        <member name="T:Bolt.IOnParticleCollision">
            <summary>
            Called when a particle hits a collider.
            </summary>
        </member>
        <member name="T:Bolt.IOnTriggerEnter">
            <summary>
            Called when a collider enters the trigger.
            </summary>
        </member>
        <member name="T:Bolt.IOnTriggerExit">
            <summary>
            Called when a collider exits the trigger.
            </summary>
        </member>
        <member name="T:Bolt.IOnTriggerStay">
            <summary>
            Called once per frame for every collider that is touching the trigger.
            </summary>
        </member>
        <member name="T:Bolt.IOnBecameInvisible">
            <summary>
            Called when the renderer is no longer visible by any camera.
            </summary>
        </member>
        <member name="T:Bolt.IOnBecameVisible">
            <summary>
            Called when the renderer became visible by any camera.
            </summary>
        </member>
        <member name="T:Bolt.IOnTimerElapsed">
            <summary>
            Called when a specified number of seconds has elapsed.
            </summary>
        </member>
        <member name="F:Bolt.VariableKind.Graph">
            <summary>
            Variables local to the current graph.
            </summary>
        </member>
        <member name="F:Bolt.VariableKind.Object">
            <summary>
            Variables shared across the current game object.
            </summary>
        </member>
        <member name="F:Bolt.VariableKind.Scene">
            <summary>
            Variables shared across the current scene.
            </summary>
        </member>
        <member name="F:Bolt.VariableKind.Application">
            <summary>
            Variables shared across scenes. 
            These will be reset when the application quits.
            </summary>
        </member>
        <member name="F:Bolt.VariableKind.Saved">
            <summary>
            Variables that persist even after the application quits.
            Unity object references are not supported.
            </summary>
        </member>
        <member name="T:Bolt.VariablesSaver">
            <summary>
            Listens to the OnApplicationQuit on OnApplicationPause
            hooks to trigger the serialization of saved variables into PlayerPrefs.
            </summary>
        </member>
    </members>
</doc>
